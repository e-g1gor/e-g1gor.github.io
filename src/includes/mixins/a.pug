mixin a_href(a_title, a_href, a_class="", a_protocol="https")
  -
    const _protocol = (function(pName) {
      if(['http', 'https', 'ftp', 'ftps'].includes(pName)) {
        return pName+"://";
      }
      return pName+":";
    })(attributes && attributes.protocol || a_protocol);
    //- const _protocol = attributes && attributes.protocol || a_protocol;
  - const _url = (attributes.url || a_href);
  - const _target = attributes && attributes.target || a_title || '_blank';
  - const _title = attributes && attributes.title || a_title;
  - const _class = attributes && attributes.class || a_class;
  -
    const _params = attributes && attributes.params ? 
      "?" + Object
        .entries(attributes.params)
        .map(function ([key, val]) { return key+'='+val}).join('&') 
      : '';
  p=_title ? _title + ": " : ""
    a(href=`${_protocol}${_url}${_params}` target=_target class=_class)
      if block
        block
      else
        =_url.split('?')[0]

mixin a_li_social(_social_type, _username)
  - 
    const socials_url_getters = {
      dribbble(uname) {
          return {
            class: "fa-dribbble",
            title: "Dribble link",
            href: "https://dribbble.com/"+uname,
          }
        },
      facebook(uname) {
          return {
            class: "fa-facebook",
            title: 'Facebook link',
            href: "https://www.facebook.com/"+uname,
          }
        },
      linkedin(uname) {
          return {
            class: "fa-linkedin",
            title: 'Linkedin link',
            href: "https://www.linkedin.com/in/"+uname,
          }
        },
      flickr(uname) {
          return {
            class: "fa-flickr",
            title: 'Flickr link',
            href: "https://www.flickr.com/photos/"+uname,
          }
        },
      github(uname) {
          return {
            class: "fa-github",
            title: 'Github link',
            href: "https://github.com/"+uname,
          }
        }, 
      stackoverflow(uname) {
          return {
            class: "fa-stack-overflow",
            title: 'Stackoverflow link',
            href: "https://stackoverflow.com/users/"+uname,
          }
        }, 
      instagram(uname) {
          return {
            class: "fa-stack-overflow",
            title: 'Instagram link',
            href: "https://www.instagram.com/"+uname,
          }
        }, 
      xing(uname) {
          return {
            class: "fa-xing",
            title: 'Xing link',
            href: "https://www.xing.com/profile/"+uname,
          }
        }, 
      pinterest(uname) {
          return {
            class: "fa-pinterest",
            title: 'Pinterest link',
            href: "https://www.pinterest.com/"+uname,
          }
        }, 
      twitter(uname) {
          return {
            class: "fa-twitter",
            title: 'Twitter link',
            href: "https://twitter.com/"+uname,
          }
        }, 
      youtube(uname) {
          return {
            class: "fa-youtube",
            title: 'Youtube link',
            href: "https://www.youtube.com/"+uname,
          }
        }, 
      orcid(uname) {
          return {
            class: "fa-orcid",
            title: 'ORCiD link',
            href: "https://orcid.org/"+uname,
          }
        }, 
      google(uname) {
          return {
            class: "fa-orcid",
            title: 'Google link',
            href: "https://scholar.google.com/citations?user="+uname,
          }
        }, 
      }
  - const username = attributes && attributes.username || _username
  - const social_type = attributes && attributes.social_type || _social_type
  - const link_info = socials_url_getters[social_type] ? socials_url_getters[social_type](username) : undefined
  if link_info
    li
      a.button.button--sacnite.button--round-l(target='_blank' href=link_info.href)
        i.fab(class=link_info.class title=link_info.title)

